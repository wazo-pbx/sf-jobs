- name: Download orig sources if needed or update changelog
  shell: "if grep -q get-orig-source debian/rules; then debian/rules get-orig-source; tar xvf ../*.tar* --strip 1 --exclude 'debian/*'; else dch -b -v $(../xivo-ci/bin/wazo-package-version $(wget -q -O - http://mirror.wazo.community/version/unstable)) --distribution $distribution --force-distribution \"$(git log -1 HEAD --pretty=format:%s)\"; fi"
  args:
    chdir: "{{ zuul.project.src_dir }}"

- name: Build debian packages
  shell: "debuild -d --no-tgz-check --no-lintian --preserve-envvar=MAKEFLAGS --preserve-envvar=PATH -us -uc -ui --no-sign"
  args:
    chdir: "{{ zuul.project.src_dir }}"

- name: Copy script to validate versions
  copy:
    src: scripts/check-versions.sh
    dest: /tmp/check-versions.sh
    mode: 0755

- name: Validate versions
  shell: "/tmp/check-versions.sh {{ zuul.project.src_dir }}/.."

- name: Install packages
  shell: "apt install -y ../*.deb"
  become: yes
  args:
    chdir: "{{ zuul.project.src_dir }}"

- name: List content of debian packages
  shell: "for p in $(ls *.deb); do echo \"=== $p ===\"; dpkg -c $p; done"
  args:
    chdir: "{{ zuul.project.src_dir }}/.."

- name: Run Lintian
  shell: "lintian *.deb"
  args:
    chdir: "{{ zuul.project.src_dir }}/.."

- name: Create Packages file
  shell: "dpkg-scanpackages . > Packages"
  args:
    chdir: "{{ zuul.project.src_dir }}/.."

- name: Check if there are tests to run
  stat:
    path: "{{ zuul.project.src_dir }}/debian/tests/control"
  register: debian_tests_control

- name: Run the tests
  shell: "autopkgtest --env=SRCDIR=$PWD $PWD -- null"
  become: yes
  when: debian_tests_control.stat.exists
  args:
    chdir: "{{ zuul.project.src_dir }}"
