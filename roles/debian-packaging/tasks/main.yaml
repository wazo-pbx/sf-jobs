- name: Install build essential packages
  become: yes
  apt:
    name:
      - 'devscripts'
      - 'dirmngr'
      - 'build-essential'
      - 'autopkgtest'
      - 'aptitude'
      # - 'piuparts'
    update_cache: true
    state: present
  vars:
    DEBIAN_FRONTEND: noninteractive

- name: Import Wazo gpg key
  become: yes
  apt_key:
    keyserver: hkp://keys.gnupg.net
    id: 3F1BF7FC527FBC6A

- name: Configure Wazo dev repository
  become: yes
  apt_repository:
    repo: deb http://mirror.wazo.community/debian/ wazo-dev-buster main
    state: present

- name: Copy script to validate versions
  copy:
    src: scripts/check-versions.sh
    dest: /tmp/check-versions.sh
    mode: 0755

- include_tasks: build-package.yaml
  loop: "{{ zuul.projects.values() | list }}"

- name: Check if we have built Debian packages
  stat:
    path: "{{ zuul.project.src_dir }}/../pkgs"
  register: pkgs

- name: Create Packages file
  shell: "set -x; mv pkgs/*.deb .; dpkg-scanpackages . > Packages"
  args:
    chdir: "{{ zuul.project.src_dir }}/.."
  when: pkgs.stat.isdir is defined and pkgs.stat.isdir

- name: Add the repository to apt config
  apt_repository:
    repo: deb [trusted=yes] file://{{ ansible_env.HOME }}/{{ zuul.project.src_dir }}/.. ./
    state: present
  become: yes
  when: pkgs.stat.isdir is defined and pkgs.stat.isdir

- name: Install packages
  # shell: "piuparts -d buster --allow-database --warn-on-debsums-errors --extra-repo='deb [trusted=yes] http://mirror.wazo.community/debian/ wazo-dev-buster main' ../*.deb"
  shell: "env DEBIAN_FRONTEND=noninteractive aptitude install -y $(for p in ../*.deb; do dpkg-deb -f $p Package; done)"
  become: yes
  args:
    chdir: "{{ zuul.project.src_dir }}"
  when: do_not_install_packages_after_build is not defined and pkgs.stat.isdir is defined and pkgs.stat.isdir

